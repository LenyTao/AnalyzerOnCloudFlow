blueprint {
 streamlets {

    film-ingress        = ru.analyzer.AkkaDataExtractorStreamlet
    processor-streamlet = ru.analyzer.AkkaDataProcessorStreamlet
    animation-streamlet = ru.analyzer.AkkaAnimationStatisticStreamlet
    anygenre-streamlet  = ru.analyzer.AkkaAnyGenreStatisticStreamlet
#     journal-event       = ru.analyzer.SparkStageJournalStreamlet
    logger-egress       = ru.analyzer.FlinkTotalStatisticStreamlet
              }
  topics  {
   ingress-film        {
    producers = [film-ingress.out-film]
    consumers = [processor-streamlet.in-film]
                         }
   processor-animation {
      producers = [processor-streamlet.out-animation]
      consumers = [animation-streamlet.in-animation]
                         }
   processor-anygenre  {
      producers = [processor-streamlet.out-anygenre]
      consumers = [anygenre-streamlet.in-anygenre]
                         }
   ingress-logger      {
      producers = [film-ingress.out-details]
      consumers = [logger-egress.in-loadingdetails]
                         }
   animation-logger    {
      producers = [animation-streamlet.out-metric-animation]
      consumers = [logger-egress.in-res-animation-metric]
                         }
   anygenre-logger     {
      producers = [anygenre-streamlet.out-metric-anygenre]
      consumers = [logger-egress.in-res-anygenre-metric]
                         }
#   loader-journal      {
#     producers = [film-ingress.out-event-loader]
#      consumers = [journal-event.in-extractor-event]
#                         }
#   processor-journal   {
#      producers = [processor-streamlet.out-event-processor]
#      consumers = [journal-event.in-processor-event]
#                         }
#   animation-journal   {
#      producers = [animation-streamlet.out-event-animation]
#      consumers = [journal-event.in-animation-event]
#                        }
#   anygenre-journal    {
#      producers = [anygenre-streamlet.out-event-anygenre]
#      consumers = [journal-event.in-anygenre-event]
#                        }
 }
}